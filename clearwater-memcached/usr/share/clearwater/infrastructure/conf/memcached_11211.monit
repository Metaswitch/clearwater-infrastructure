# Check the service's public interface.  We put this first so that we process
# failed polls (and maybe kill the server) before we process the restart.

check program poll_memcached with path "/usr/share/clearwater/bin/poll_memcached.sh"

  if status != 0 for 2 cycles
    then exec "/etc/init.d/memcached stop 11211"


# Monitor the service's PID file and check its CPU usage. Issue an alarm for
# any restart, clear after the process has run for 30s.

check process memcached with pidfile "/var/run/memcached_11211.pid"

  start = "/bin/bash -c '/usr/share/clearwater/bin/issue_alarm.py monit 3500.3; /etc/init.d/memcached start 11211'"
  stop  = "/bin/bash -c '/usr/share/clearwater/bin/issue_alarm.py monit 3500.3; /etc/init.d/memcached stop 11211'"

  if cpu usage is greater than 60 percent for 2 cycles
     then alert

  if cpu usage > 98% for 5 cycles
     then restart

  if 2 restarts within 3 cycles
     then timeout

  if uptime < 30 seconds
     then exec "/bin/true"
     else if succeeded
         then exec "/usr/share/clearwater/bin/issue_alarm.py monit 3500.1"

