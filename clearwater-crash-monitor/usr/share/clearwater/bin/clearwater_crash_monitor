#!/bin/sh

# @file clearwater_crash_monitor
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2013  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

while true
do
  # Look for crashes and upload them if present.
  for crash in $(find /var/crash -name *.crash -mmin +1)
  do
    logger -p daemon.error -t clearwater-crash-monitor Examining crash $crash
    # First, check the type of the crash dump and append details if required.
    # We should be able to do this via apport, but it seem very fiddly.
    if basename $crash | grep -q "^_usr_share_clearwater_bin_sprout"
    then
      # Sprout or bono crash dumps should include the most recent sprout/bono
      # log files.
      log_file=$(ls -1tr /var/log/sprout/sprout_*.txt 2>/dev/null | tail -n1)
      if [ -n "$log_file" ]
      then
        logger -p daemon.error -t clearwater-crash-monitor Adding log file $log_file
        echo "SproutLog: base64" >> $crash
        echo -n " " >> $crash
        tail -n100000 $log_file | gzip | base64 -w 0 >> $crash
        echo >> $crash
      fi
      log_file=$(ls -1tr /var/log/bono/sprout_*.txt 2>/dev/null | tail -n1)
      if [ -n "$log_file" ]
      then
        logger -p daemon.error -t clearwater-crash-monitor Adding log file $log_file
        echo "BonoLog: base64" >> $crash
        echo -n " " >> $crash
        tail -n100000 $log_file | gzip | base64 -w 0 >> $crash
        echo >> $crash
      fi
    fi
    # Next, work out the URL of the server - default this to the repository we
    # pulled from.
    crash_url=$(cut -d ' ' -f 2 /etc/apt/sources.list.d/clearwater.list | sed -e 's/repo$/crash/g')
    . /etc/clearwater/config
    # Finally, upload the file and delete it - if upload fails, don't retry.
    if [[ $crash_url =~ ^https:// ]]
    then
      logger -p daemon.error -t clearwater-crash-monitor Uploading via HTTPS to $crash_url
      curl -X PUT $crash_url/$(basename $crash).$(date -r $crash +%y%m%d.%H%M%S) --data-binary @$crash --cert /etc/apt/certs/repository-client.crt --key /etc/apt/certs/repository-client.key --cacert /etc/apt/certs/repository-ca.crt | logger -p daemon.error -t clearwater-crash-monitor
    else
      logger -p daemon.error -t clearwater-crash-monitor Uploading via HTTP to $crash_url
      curl -X PUT $crash_url/$(basename $crash).$(date -r $crash +%y%m%d.%H%M%S) --data-binary @$crash | logger -p daemon.error -t clearwater-crash-monitor
    fi
    rm -f $crash
  done
  # Wait a bit for more crashes to be generated.
  sleep 60
done
